# coding: utf8

from dateutil.parser import parse as parse_date

from liberapay.exceptions import LoginRequired
from liberapay.models.participant import Participant

[---]

if user.ANON:
    raise LoginRequired

if not user.is_admin:
    raise response.error(403)

if request.method == 'POST':
    event_data = {}
    p = Participant.from_id(request.body['p_id'])
    updated = 0
    for attr in constants.PROFILE_VISIBILITY_ATTRS:
        value = request.body.get(attr)
        if value is None:
            continue
        r = p.update_bit(attr, 2, value == 'on')
        if r:
            updated += 1
            event_data[attr] = value == 'on'
    if event_data:
        p.add_event(website.db, 'visibility_override', event_data, user.id)
    raise response.json({'msg': "Done, %i bits have been updated." % updated})

mode = request.qs.get('mode', 'all')
if mode == 'all':
    participants = website.db.all("""
        SELECT p
             , (SELECT c.name FROM communities c WHERE c.participant = p.id) AS c_name
             , ( SELECT json_build_object('address', e.address, 'verified', e.verified)
                   FROM emails e
                  WHERE e.participant = p.id
               ORDER BY e.address = p.email DESC NULLS LAST
                      , e.verified DESC
                      , e.added_time
               ) AS email
             , ( SELECT json_agg(json_build_object(
                            'type', s.type, 'content', s.content, 'lang', s.lang
                        ))
                   FROM ( SELECT s.*
                            FROM statements s
                           WHERE s.participant = p.id
                        ORDER BY s.lang, s.type DESC
                        ) s
               ) AS statements
             , ( SELECT row_to_json(e)
                   FROM ( SELECT e.*, p2.username AS recorder_name
                            FROM events e
                       LEFT JOIN participants p2 ON p2.id = e.recorder
                           WHERE e.participant = p.id
                             AND e.type = 'visibility_override'
                        ORDER BY ts DESC
                           LIMIT 1
                        ) e
               ) as last_change
          FROM participants p
         WHERE p.id < %s
           AND (p.status <> 'stub' OR p.receiving > 0)
      ORDER BY p.id DESC
         LIMIT 25
    """, (request.qs.get_int('last_showed', float('inf')),))
    last_id = participants[-1][0].id if participants else 0
else:
    raise response.error(400, "unknown `mode` value %r in querystring" % mode)

title = "Users Admin"

[---] text/html
% from 'templates/avatar-url.html' import avatar_img with context
% from 'templates/icons.html' import fontawesome, glyphicon

% extends "templates/base.html"

% block content

<noscript><div class="alert alert-danger">{{ _("JavaScript is required") }}</div></noscript>

% for p, c_name, email, statements, last_change in participants
<div class="row user-admin">
    <div class="col-md-2 mini-user-admin">
        <a href="/{{ p.username }}/">
            <div class="name">{{ c_name if c_name else p.username }}<br>({{ p.kind }}, {{ p.status }})</div>
            {{ avatar_img(p, size=120) }}
            <div class="age">{{ to_age_str(p.join_time, add_direction=True) if p.join_time }}</div>
        </a>
    </div>
    <div class="col-md-6">
        % if p.kind != 'community'
            <p>
            % if email
                <strong>Email address:</strong> {{ email.address }}
                % if email.verified
                <span class="text-success" title="Verified">{{ glyphicon('ok-sign') }}</span>
                % else
                <span class="text-danger" title="Unconfirmed">{{ glyphicon('warning-sign') }}</span>
                % endif
            % else
                <strong>Email address:</strong> none.
            % endif
            </p>
        % endif

        <p><strong>Elsewhere accounts:</strong>
        % set elsewhere = p.get_accounts_elsewhere().values()
        % if elsewhere
            % for account in elsewhere
                <div class="account">
                    <a class="account-link" href="{{ account.html_url }}">
                        {{ fontawesome(account.platform) }}
                        <span class="account-username">{{ account.friendly_name_long }}</span>
                    </a>
                </div>
            % endfor
        % else
            none. <span class="text-danger">{{ glyphicon('warning-sign') }}</span>
        % endif
        </p>

        <div><strong>Profile descriptions:</strong>
        % if statements
            <br>
            % for s in statements or ()
                [<em>{{ locale.languages_2.get(s.lang, s.lang) }} {{ s.type }}</em>]
                % if s.type in ('profile', 'sidebar')
                    <section class="profile-statement embedded raw" lang="{{ s.lang }}">{{
                        s.content
                    }}</section>
                % else
                    {{ s.content }}
                % endif
                <br>
            % endfor
        % else
            none. <span class="text-danger">{{ glyphicon('warning-sign') }}</span>
        % endif
        </div>
    </div>
    <div class="col-md-4">
        <form action="javascript:" method="POST" class="js-submit">
            <input type="hidden" name="p_id" value="{{ p.id }}">
            % for attr in constants.PROFILE_VISIBILITY_ATTRS
                % set value = getattr(p, attr)
                <label>
                    <input type="checkbox" name="{{ attr }}" {{ 'checked' if value.__and__(2) }} />
                    {{ attr }} (user value: {{ bool(value.__and__(1)) }})
                </label>
                <br>
            % endfor
            <button class="btn btn-warning">{{ _("Save") }}</button>
        </form>
        <br>
        % if last_change
        <span class="text-muted">{{ _(
            "Last changed {timedelta} ago by {username}.",
            username=last_change.recorder_name,
            timedelta=to_age(parse_date(last_change.ts))
        ) }}</span>
        % endif
    </div>
</div>
<br>
% endfor

% if last_id > 1
<a class="btn btn-default btn-lg" href="?last_showed={{ last_id }}">{{ _("Next") }} â†’</a>
% endif

% endblock
